import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

plugins {
    id 'java'
}

group 'org.talents.example.gradle'
version '1.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'
}

compileTestJava {
  // serialVersionUID is basically guaranteed to be useless in tests
  options.compilerArgs += ["-Xlint:-serial"]
  // It undeprecates DoubleSubject.isEqualTo(Double).
  options.compilerArgs += ["-Xlint:-deprecation"]
}

jar.manifest {
  attributes('Implementation-Title': name,
          'Implementation-Version': version,
          'Built-By': System.getProperty('user.name'),
          'Built-JDK': System.getProperty('java.version'),
          'Source-Compatibility': sourceCompatibility,
          'Target-Compatibility': targetCompatibility)
}

javadoc.options {
  encoding = 'UTF-8'
  links 'https://docs.oracle.com/javase/8/docs/api/'
}

ext {
  appengineVersion = '1.9.71'
  aspectjVersion = '1.8.11'
  autoValueVersion = '1.4'
  findBugsAnnotationsVersion = '3.0.1'
  findBugsJsr305Version = '3.0.2'
  errorProneVersion = '2.3.2'
  grpcVersion = '1.19.0'
  guavaVersion = '26.0-android'
  googleAuthVersion = '0.13.0'
  googleCloudBetaVersion = '0.83.0-beta'
  googleCloudGaVersion = '1.65.0'
  log4j2Version = '2.11.1'
  signalfxVersion = '0.0.48'
  springBootVersion = '1.5.15.RELEASE'
  springCloudVersion = '1.3.4.RELEASE'
  springVersion = '4.3.12.RELEASE'
  prometheusVersion = '0.6.0'
  protobufVersion = '3.7.0'
  zipkinReporterVersion = '2.7.14'
  jaegerReporterVersion = '0.33.1'
  opencensusProtoVersion = '0.2.0'
  gsonVersion = '2.8.5'
  dropwizardVersion = '3.1.2'
  dropwizard5Version = '5.0.0'

  libraries = [
          appengine_api: "com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}",
          aspectj: "org.aspectj:aspectjrt:${aspectjVersion}",
          auto_value: "com.google.auto.value:auto-value:${autoValueVersion}",
          auto_service: 'com.google.auto.service:auto-service:1.0-rc3',
          byte_buddy: 'net.bytebuddy:byte-buddy:1.8.22',
          config: 'com.typesafe:config:1.2.1',
          disruptor: 'com.lmax:disruptor:3.4.2',
          errorprone: "com.google.errorprone:error_prone_annotations:${errorProneVersion}",
          findbugs_annotations: "com.google.code.findbugs:annotations:${findBugsAnnotationsVersion}",
          google_auth: "com.google.auth:google-auth-library-credentials:${googleAuthVersion}",
          google_cloud_logging: "com.google.cloud:google-cloud-logging:${googleCloudGaVersion}",
          google_cloud_trace: "com.google.cloud:google-cloud-trace:${googleCloudBetaVersion}",
          log4j2: "org.apache.logging.log4j:log4j-core:${log4j2Version}",
          zipkin_reporter: "io.zipkin.reporter2:zipkin-reporter:${zipkinReporterVersion}",
          zipkin_urlconnection: "io.zipkin.reporter2:zipkin-sender-urlconnection:${zipkinReporterVersion}",
          jaeger_reporter: "io.jaegertracing:jaeger-client:${jaegerReporterVersion}",
          google_cloud_monitoring: "com.google.cloud:google-cloud-monitoring:${googleCloudGaVersion}",
          grpc_context: "io.grpc:grpc-context:${grpcVersion}",
          grpc_core: "io.grpc:grpc-core:${grpcVersion}",
          grpc_netty: "io.grpc:grpc-netty:${grpcVersion}",
          grpc_stub: "io.grpc:grpc-stub:${grpcVersion}",
          guava: "com.google.guava:guava:${guavaVersion}",
          jsr305: "com.google.code.findbugs:jsr305:${findBugsJsr305Version}",
          signalfx_java: "com.signalfx.public:signalfx-java:${signalfxVersion}",
          spring_aspects: "org.springframework:spring-aspects:${springVersion}",
          spring_boot_starter_web: "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
          spring_cloud_build: "org.springframework.cloud:spring-cloud-build:${springCloudVersion}",
          spring_cloud_starter_sleuth: "org.springframework.cloud:spring-cloud-starter-sleuth:${springCloudVersion}",
          spring_context: "org.springframework:spring-context:${springVersion}",
          spring_context_support: "org.springframework:spring-context-support:${springVersion}",
          prometheus_simpleclient: "io.prometheus:simpleclient:${prometheusVersion}",
          protobuf: "com.google.protobuf:protobuf-java:${protobufVersion}",
          opencensus_proto: "io.opencensus:opencensus-proto:${opencensusProtoVersion}",
          gson: "com.google.code.gson:gson:${gsonVersion}",

          // Test dependencies.
          guava_testlib: "com.google.guava:guava-testlib:${guavaVersion}",
          junit: 'junit:junit:4.12',
          mockito: 'org.mockito:mockito-core:1.9.5',
          spring_test: "org.springframework:spring-test:${springVersion}",
          truth: 'com.google.truth:truth:0.42',
          dropwizard: "io.dropwizard.metrics:metrics-core:${dropwizardVersion}",
          dropwizard5: "io.dropwizard.metrics5:metrics-core:${dropwizard5Version}",
  ]
}

